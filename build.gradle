/*
* Copyright (c) 2016-2017 Acrolinx GmbH
*/

task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}

buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "com.diffplug.gradle:goomph:${VER_GOOMPH}"
		classpath "org.ajoberstar:gradle-git:${VER_GRADLE_GIT}"
		classpath "com.smokejumperit.gradle.license:Gradle-License-Report:+"
	}
}

apply plugin: 'org.ajoberstar.grgit'

allprojects {

	/*tasks.withType(Javadoc) {
		options.addStringOption('Xdoclint:none', '-quiet')
		options.memberLevel = JavadocMemberLevel.PUBLIC
	}*/

	gradle.projectsEvaluated {
		tasks.withType(JavaCompile) {
			options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
		}
	}

	project.version = currentVersion
}

subprojects {

	group 'com.acrolinx'

	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'eclipse'

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

	compileJava.options.encoding = 'UTF-8'
	compileTestJava.options.encoding = 'UTF-8'

	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "http://maven-eclipse.github.io/maven"
		}
	}

	dependencies {
		compile 'com.google.guava:guava:19.+'
		compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.1'
		compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.1'
		compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
		testCompile group: 'junit', name: 'junit', version: '4.+'
	}

	apply plugin: 'findbugs'
	findbugs {
		toolVersion = VER_FINDBUGS
		sourceSets = [sourceSets.main]    // don't check the test code
		ignoreFailures = false    // bug free or it doesn't ship!
		reportsDir = file('build/findbugs')
		effort = 'max'            // min|default|max
		reportLevel = 'medium'        // low|medium|high (low = sensitive to even minor mistakes)
		excludeFilter = file("$rootProject.projectDir/findbugs/excludeFilter.xml")
		omitVisitors = []        // bugs that we want to ignore
	}

	tasks.withType(FindBugs) {
		reports {
			xml.enabled = false
			html.enabled = true
		}
	}
}

project(':sidebar_demo_swt') {

	apply plugin: 'application'
	apply plugin: 'com.diffplug.gradle.swt.nativedeps'

	mainClassName = "com.acrolinx.client.sidebar.demo.swt.AcrolinxDemoClientSWT"

	applicationDefaultJvmArgs = ["-Dsun.net.http.allowRestrictedHeaders=true", "-Dlogback.configurationFile=../../logback.xml"]

	sourceSets.main.resources.srcDir "../../sidebar/swt/src/main/resources";

	dependencies {
		compile project(':sidebar_swt')
		testCompile project(':sidebar_swt')
	}

	javadoc.enabled = false
}

project(':sidebar_demo_swing') {
	apply plugin: 'application'

	mainClassName = "com.acrolinx.client.sidebar.demo.swing.AcrolinxDemoClientSwing"

	applicationDefaultJvmArgs = ["-Dsun.net.http.allowRestrictedHeaders=true", "-Dlogback.configurationFile=../../logback.xml"]

	dependencies {
		compile project(':sidebar_swing')
	}

	javadoc.enabled = false
}

project(':sidebar_demo_jfx') {
	apply plugin: 'application'

	mainClassName = "com.acrolinx.client.sidebar.demo.jfx.AcrolinxDemoClientJFX"

	applicationDefaultJvmArgs = ["-Dsun.net.http.allowRestrictedHeaders=true", "-Dlogback.configurationFile=../../logback.xml"]

	dependencies {
		compile project(':sidebar_jfx')
	}

	javadoc.enabled = false
}

project(':sidebar_jfx') {

	dependencies {
		compile project(':sidebar_common')
	}
}

project(':sidebar_swing') {

	dependencies {
		compile project(':sidebar_jfx')
	}
}

project(':sidebar_swt') {

	apply plugin: 'com.diffplug.gradle.swt.nativedeps'

	dependencies {
		compile project(':sidebar_common')
	}
}

project(':sidebar_common') {

	apply plugin: 'license-report'

	dependencies {
		compile 'com.google.code.gson:gson:2.2.4'
		compile 'commons-lang:commons-lang:2.6'
		compile 'org.bitbucket.cowwoc:diff-match-patch:1.1'
	}
}

project(':java-sdk-demo-build') {

}
